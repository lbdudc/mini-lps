version: "3"
services:
  server:
    build:
      context: ../server
      dockerfile: Dockerfile
    container_name: /*%= normalizeKebabCase(data.basicData.name) %*/-server
     /*% if (feature.D_C_Geoserver || feature.D_C_Postgres ) { %*/
    depends_on:
      /*% if (feature.D_C_Geoserver) { %*/
      - geoserver
      /*% } %*/
      /*% if (feature.D_C_Postgres) { %*/
      - postgres
      /*% } %*/
    /*% } %*/
    networks:
      - local
    volumes:
      - "../server/:/app/server/"
    restart: unless-stopped
    ports:
      - '/*%= getExtraConfigFromSpec(data, 'server_deploy_port', '9001') %*/:/*%= getExtraConfigFromSpec(data, 'server_deploy_port', '9001') %*/'
  client:
    build:
      context: ../client
      dockerfile: ../client/deploy/Dockerfile
    container_name: /*%= normalizeKebabCase(data.basicData.name) %*/-client
    networks:
      - local
    /*% if (!feature.D_C_Nginx) { %*/
    ports:
      - '1080:80'
    /*% } %*/

  /*% if (feature.D_C_Postgres) { %*/
  postgres:
    container_name: ${PG_CONTAINER_NAME}
    build:
      context: ./postgres
      dockerfile: postgres.dockerfile
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASSWORD}
      PGDATA: ${PGDATA}
      POSTGRES_MULTIPLE_EXTENSIONS: ${POSTGRES_MULTIPLE_EXTENSIONS}
      POSTGRES_RUN_AS_ROOT: ${POSTGRES_RUN_AS_ROOT}
    volumes:
      - postgres:/data/postgres
    networks:
      - local
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: "PGPASSWORD=${POSTGRES_PASSWORD} pg_isready -h 127.0.0.1 -U ${POSTGRES_USER} -d ${POSTGRES_DB}"

  /*% } %*/
  /*% if (feature.D_C_Geoserver) { %*/
  geoserver:
    container_name: ${GEOSERVER_CONTAINER_NAME}
    image: docker.osgeo.org/geoserver:2.21.1
    environment:
      - CORS_ENABLED=${GEOSERVER_CORS_ENABLED}
      - INSTALL_EXTENSIONS=${GEOSERVER_INSTALL_EXTENSIONS}
      - EXTRA_JAVA_OPTS=${GEOSERVER_EXTRA_JAVA_OPTS}
      - GEOSERVER_CSRF_WHITELIST=${GEOSERVER_CSRF_WHITELIST}
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
    volumes:
      - /opt/ci/deployments/geoserver/data/:/opt/geoserver_data:Z
      - /opt/ci/deployments/geoserver/additional_libs:/opt/additional_libs:Z # by mounting this we can install libs from host on startup
    networks:
      - local
    ports:
      - "8080:8080"
    restart: unless-stopped

  /*% } %*/
  /*% if (feature.D_C_Nginx) { %*/
  nginx:
    container_name: ${NGINX_CONTAINER_NAME}
    build:
      context: ./nginx
      dockerfile: nginx.dockerfile
    networks:
      - local
    volumes:
      - ../client/:/app/client/
    ports:
      - "80:80"
    /*% if (feature.D_C_Geoserver) { %*/
    depends_on:
      - geoserver
    /*% } %*/
    restart: unless-stopped

  /*% } %*/
/*% if (feature.D_C_Postgres) { %*/
volumes:
  postgres:
    external: false

/*% } %*/
networks:
  local:
    driver: bridge
